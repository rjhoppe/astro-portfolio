---
import { getCollection, type CollectionEntry } from "astro:content";
import Container from "@components/Container.astro";
import PageLayout from "@layouts/PageLayout.astro";
import ArrowCard from "@components/ArrowCard.astro";
import Link from "@components/Link.astro";
import { dateRange } from "@lib/utils";
import { SITE, HOME, SOCIALS } from "@consts";
import Avatar from "@components/Avatar.astro";
import Details from "@components/Details.astro";
import Socials from "@components/Socials.astro";

type Blog = CollectionEntry<"blog">;
type Project = CollectionEntry<"projects">;
type WorkWithContent = CollectionEntry<"work"> & {
  Content: any;
};

const blog: Blog[] = (await getCollection("blog"))
  .filter((post: Blog) => !post.data.draft)
  .sort((a: Blog, b: Blog) => b.data.date.valueOf() - a.data.date.valueOf())
  .slice(0, SITE.NUM_POSTS_ON_HOMEPAGE);

const projects: Project[] = (await getCollection("projects"))
  .filter((project: Project) => !project.data.draft)
  .sort(
    (a: Project, b: Project) => b.data.date.valueOf() - a.data.date.valueOf(),
  )
  .slice(0, SITE.NUM_PROJECTS_ON_HOMEPAGE);

const allwork = (await getCollection("work"))
  .sort(
    (a: CollectionEntry<"work">, b: CollectionEntry<"work">) =>
      new Date(b.data.dateStart).valueOf() -
      new Date(a.data.dateStart).valueOf(),
  )
  .slice(0, SITE.NUM_WORKS_ON_HOMEPAGE);

const work: WorkWithContent[] = await Promise.all(
  allwork.map(async (item: CollectionEntry<"work">) => {
    const { Content } = await item.render();
    return { ...item, Content };
  }),
);

const hideBlog = true;
---

<PageLayout title={HOME.TITLE} description={HOME.DESCRIPTION}>
  <Container>
    <div
      class="grid py-4 pb-36 grid-cols-1 place-content-center place-items-center gap-5"
    >
      <Avatar />
      <Details />
      <Socials />
    </div>
    <h4 class="animate font-semibold text-black dark:text-white">
      Thanks for stopping by <span class="text-xl">üëãüèª</span>
    </h4>
    <div class="space-y-16">
      <section>
        <article class="space-y-4">
          <p class="animate">
            I am software engineer with a passion for solving problems. I enjoy
            the creavitity and challenges that come with creating reliable,
            scalable, and performant software.
          </p>
          <p class="animate">
            When I am not writing code for work, I enjoy programming in my spare
            time to solve <i>real</i> or imagined problems. Most of what I have written
            is now running on my Proxmox mini-PC or in my VPS.
          </p>
        </article>
      </section>
      {
        hideBlog ? null : (
          <section class="animate space-y-6">
            <div class="flex flex-wrap gap-y-2 items-center justify-between">
              <h5 class="font-semibold text-black dark:text-white">
                Latest posts
              </h5>
              <Link href="/blog"> See all posts </Link>
            </div>
            <ul class="flex flex-col gap-4">
              {blog.map((post: Blog) => (
                <li>
                  <ArrowCard entry={post} />
                </li>
              ))}
            </ul>
          </section>
        )
      }
      <section class="animate space-y-6">
        <div class="flex flex-wrap gap-y-2 items-center justify-between">
          <h5 class="font-semibold text-black dark:text-white">
            Work Experience
          </h5>
          <Link href="/work"> See all work and resume </Link>
        </div>
        <ul class="flex flex-col space-y-4">
          {
            work.map((entry: WorkWithContent) => (
              <li>
                <div class="font-semibold text-black dark:text-white">
                  {entry.data.company}
                </div>
                <div class="flex justify-between text-sm opacity-75">
                  <div>{entry.data.role}</div>
                  <div>
                    {dateRange(entry.data.dateStart, entry.data.dateEnd)}
                  </div>
                </div>
                <article>
                  <entry.Content />
                </article>
              </li>
            ))
          }
        </ul>
      </section>

      <section class="animate space-y-6">
        <div class="flex flex-wrap gap-y-2 items-center justify-between">
          <h5 class="font-semibold text-black dark:text-white">
            Recent projects
          </h5>
          <Link href="/projects"> See all projects </Link>
        </div>
        <ul class="flex flex-col gap-4">
          {
            projects.map((project: Project) => (
              <li>
                <ArrowCard entry={project} />
              </li>
            ))
          }
        </ul>
      </section>

      <section class="animate space-y-4">
        <h5 class="font-semibold text-black dark:text-white">Let's Connect</h5>
        <article>
          <p>
            If you want to get in touch with me about something or just to say
            hi, reach out on social media or send me an email.
          </p>
        </article>
        <ul class="flex flex-wrap gap-2">
          {
            SOCIALS.map((SOCIAL) => (
              <li class="flex gap-x-2 text-nowrap">
                <Link
                  href={SOCIAL.HREF}
                  external
                  aria-label={`${SITE.NAME} on ${SOCIAL.NAME}`}
                >
                  {SOCIAL.NAME}
                </Link>
                {"/"}
              </li>
            ))
          }
          <li class="line-clamp-1">
            <Link href="/contact" aria-label="Contact Me"> email </Link>
          </li>
        </ul>
      </section>
    </div>
  </Container>
</PageLayout>
